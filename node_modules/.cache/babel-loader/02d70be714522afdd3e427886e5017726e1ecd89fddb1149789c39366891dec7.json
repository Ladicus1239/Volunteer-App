{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fireb\\\\volunteer-management\\\\src\\\\Components\\\\dropdownMS.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'option1',\n  label: 'Option 1'\n}, {\n  value: 'option2',\n  label: 'Option 2'\n}, {\n  value: 'option3',\n  label: 'Option 3'\n}, {\n  value: 'option4',\n  label: 'Option 4'\n}];\nconst DropdownMenu = () => {\n  _s();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  const handleChange = event => {\n    const value = event.target.value;\n    setSelectedOptions(prevSelectedOptions => event.target.checked ? [...prevSelectedOptions, value] : prevSelectedOptions.filter(option => option !== value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: \"dropdown-button\",\n      children: \"Select Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.value,\n          onChange: handleChange,\n          checked: selectedOptions.includes(option.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DropdownMenu, \"9wBBikiWlVurz6ZJNnbMMad2g8s=\");\n_c = DropdownMenu;\nexport default DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","options","value","label","DropdownMenu","_s","dropdownOpen","setDropdownOpen","selectedOptions","setSelectedOptions","toggleDropdown","handleChange","event","target","prevSelectedOptions","checked","filter","option","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","includes","_c","$RefreshReg$"],"sources":["C:/Users/Fireb/volunteer-management/src/Components/dropdownMS.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './style.css'; // Import the CSS file for styling\r\n\r\nconst options = [\r\n  { value: 'option1', label: 'Option 1' },\r\n  { value: 'option2', label: 'Option 2' },\r\n  { value: 'option3', label: 'Option 3' },\r\n  { value: 'option4', label: 'Option 4' }\r\n];\r\n\r\nconst DropdownMenu = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedOptions(prevSelectedOptions =>\r\n      event.target.checked\r\n        ? [...prevSelectedOptions, value]\r\n        : prevSelectedOptions.filter(option => option !== value)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <button onClick={toggleDropdown} className=\"dropdown-button\">\r\n        Select Options\r\n      </button>\r\n      {dropdownOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map(option => (\r\n            <label key={option.value}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={option.value}\r\n                onChange={handleChange}\r\n                checked={selectedOptions.includes(option.value)}\r\n              /> \r\n              {option.label}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAW,CAAC,EACvC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAW,CAAC,EACvC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAW,CAAC,EACvC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAW,CAAC,CACxC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BH,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMV,KAAK,GAAGU,KAAK,CAACC,MAAM,CAACX,KAAK;IAChCO,kBAAkB,CAACK,mBAAmB,IACpCF,KAAK,CAACC,MAAM,CAACE,OAAO,GAChB,CAAC,GAAGD,mBAAmB,EAAEZ,KAAK,CAAC,GAC/BY,mBAAmB,CAACE,MAAM,CAACC,MAAM,IAAIA,MAAM,KAAKf,KAAK,CAC3D,CAAC;EACH,CAAC;EAED,oBACEF,OAAA;IAAKkB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCnB,OAAA;MAAQoB,OAAO,EAAEV,cAAe;MAACQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRlB,YAAY,iBACXN,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BlB,OAAO,CAACwB,GAAG,CAACR,MAAM,iBACjBjB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UACE0B,IAAI,EAAC,UAAU;UACfxB,KAAK,EAAEe,MAAM,CAACf,KAAM;UACpByB,QAAQ,EAAEhB,YAAa;UACvBI,OAAO,EAAEP,eAAe,CAACoB,QAAQ,CAACX,MAAM,CAACf,KAAK;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,EACDP,MAAM,CAACd,KAAK;MAAA,GAPHc,MAAM,CAACf,KAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvCID,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}