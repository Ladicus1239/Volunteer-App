{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Documents\\\\GitHub\\\\Volunteer-App\\\\src\\\\Pages\\\\ProfileManage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport Navigation from '../Components/Navigation';\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport db from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst skills = [{\n  value: \"Adaptability\",\n  label: \"Adaptability\"\n}, {\n  value: \"Communication\",\n  label: \"Communication\"\n}, {\n  value: \"Creative\",\n  label: \"Creative\"\n}, {\n  value: \"Interpersonal Communication\",\n  label: \"Interpersonal Communication\"\n}, {\n  value: \"Leadership\",\n  label: \"Leadership\"\n}, {\n  value: \"Problem Solving\",\n  label: \"Problem Solving\"\n}, {\n  value: \"Strong Work Ethic\",\n  label: \"Strong Work Ethic\"\n}, {\n  value: \"Teamwork\",\n  label: \"Teamwork\"\n}, {\n  value: \"Time Management\",\n  label: \"Time Management\"\n}];\nconst states = [{\n  value: \"AL\",\n  label: \"Alabama, AL\"\n}, {\n  value: \"AK\",\n  label: \"Alaska, AK\"\n}, {\n  value: \"AZ\",\n  label: \"Arizona, AK\"\n}, {\n  value: \"AR\",\n  label: \"Arkansas, AR\"\n}, {\n  value: \"CA\",\n  label: \"California, CA\"\n}, {\n  value: \"CO\",\n  label: \"Colorado, CO\"\n}, {\n  value: \"CT\",\n  label: \"Connecticut, CT\"\n}, {\n  value: \"DE\",\n  label: \"Delaware, DE\"\n}, {\n  value: \"FL\",\n  label: \"Florida, FL\"\n}, {\n  value: \"GA\",\n  label: \"Georgia, GA\"\n}, {\n  value: \"HI\",\n  label: \"Hawaii, HI\"\n}, {\n  value: \"ID\",\n  label: \"Idaho, ID\"\n}, {\n  value: \"IL\",\n  label: \"Illinois, IL\"\n}, {\n  value: \"IN\",\n  label: \"Indiana, IN\"\n}, {\n  value: \"IA\",\n  label: \"Iowa, IA\"\n}, {\n  value: \"KS\",\n  label: \"Kansas, KS\"\n}, {\n  value: \"KY\",\n  label: \"Kentucky, KY\"\n}, {\n  value: \"LA\",\n  label: \"Louisiana, LA\"\n}, {\n  value: \"ME\",\n  label: \"Maine, ME\"\n}, {\n  value: \"MD\",\n  label: \"Maryland, MD\"\n}, {\n  value: \"MA\",\n  label: \"Massachusetts, MA\"\n}, {\n  value: \"MI\",\n  label: \"Michigan, MI\"\n}, {\n  value: \"MN\",\n  label: \"Minnesota, MN\"\n}, {\n  value: \"MS\",\n  label: \"Mississippi, MS\"\n}, {\n  value: \"MO\",\n  label: \"Missouri, MO\"\n}, {\n  value: \"MT\",\n  label: \"Montana, MT\"\n}, {\n  value: \"NE\",\n  label: \"Nebraska, NE\"\n}, {\n  value: \"NV\",\n  label: \"Nevada, NV\"\n}, {\n  value: \"NH\",\n  label: \"New Hampshire, NH\"\n}, {\n  value: \"NJ\",\n  label: \"New Jersey, NJ\"\n}, {\n  value: \"NM\",\n  label: \"New Mexico, NM\"\n}, {\n  value: \"NY\",\n  label: \"New York, NY\"\n}, {\n  value: \"NC\",\n  label: \"North Carolina, NC\"\n}, {\n  value: \"ND\",\n  label: \"North Dakota, ND\"\n}, {\n  value: \"OH\",\n  label: \"Ohio, OH\"\n}, {\n  value: \"OK\",\n  label: \"Oklahoma, OK\"\n}, {\n  value: \"OR\",\n  label: \"Oregon, OR\"\n}, {\n  value: \"PA\",\n  label: \"Pennsylvania, PA\"\n}, {\n  value: \"RI\",\n  label: \"Rhode Island, RI\"\n}, {\n  value: \"SC\",\n  label: \"South Carolina, SC\"\n}, {\n  value: \"SD\",\n  label: \"South Dakota, SD\"\n}, {\n  value: \"TN\",\n  label: \"Tennessee, TN\"\n}, {\n  value: \"TX\",\n  label: \"Texas, TX\"\n}, {\n  value: \"UT\",\n  label: \"Utah, UT\"\n}, {\n  value: \"VT\",\n  label: \"Vermont, VT\"\n}, {\n  value: \"VA\",\n  label: \"Virginia, VA\"\n}, {\n  value: \"WA\",\n  label: \"Washington, WA\"\n}, {\n  value: \"WV\",\n  label: \"West Virginia, WV\"\n}, {\n  value: \"WI\",\n  label: \"Wisconsin, WI\"\n}, {\n  value: \"WY\",\n  label: \"Wyoming, WY\"\n}];\nconst days = [...Array(31)].map((_, i) => ({\n  value: String(i + 1),\n  label: String(i + 1).padStart(2, '0')\n}));\nconst months = [...Array(12)].map((_, i) => ({\n  value: String(i + 1),\n  label: String(i + 1).padStart(2, '0')\n}));\nconst years = [{\n  value: \"2024\",\n  label: \"2024\"\n}, {\n  value: \"2025\",\n  label: \"2025\"\n}, {\n  value: \"2026\",\n  label: \"2026\"\n}];\nconst ProfileManage = () => {\n  _s();\n  /*const { currentUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  const emailRef = useRef(null);\r\n    useEffect(() => {\r\n    if (!currentUser) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [currentUser, navigate]);*/\n\n  const [selectedState, setSelectedState] = useState(null);\n  const handleChangeState = selectedState => {\n    setSelectedState(selectedState);\n  };\n  const [selectedSkill, setSelectedSkill] = useState([]);\n  const [skillArray, setSkillArray] = useState([]);\n  const handleChangeSkill = selectedSkill => {\n    setSelectedSkill(Array.isArray(selectedSkill) ? selectedSkill : []);\n    const skillString = (selectedSkill || []).map(skill => skill.value).join(\", \");\n    setSkillArray(skillString);\n  };\n  const [selectedDay, setSelectedDay] = useState(null);\n  const handleChangeDay = selectedDay => {\n    setSelectedDay(selectedDay);\n  };\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const handleChangeMonth = selectedMonth => {\n    setSelectedMonth(selectedMonth);\n  };\n  const [selectedYear, setSelectedYear] = useState(null);\n  const handleChangeYear = selectedYear => {\n    setSelectedYear(selectedYear);\n  };\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [dateArray, setDateArray] = useState([]);\n  const handleDateSelection = () => {\n    if (selectedDay && selectedMonth && selectedYear) {\n      const newDate = `${selectedYear.label}-${selectedMonth.label}-${selectedDay.label}`;\n      if (!selectedDates.includes(newDate)) {\n        const updatedDates = [...selectedDates, newDate];\n        setSelectedDates(updatedDates);\n        setDateArray(updatedDates.join(\", \"));\n      }\n    } else {\n      alert(\"Please select day, month, and year.\");\n    }\n  };\n  const [fullName, setName] = useState('');\n  const [getAdd, setAddr] = useState('');\n  const [getAdd2, setAddr2] = useState('');\n  const [getCity, setCity] = useState('');\n  //const [getState, setState] = useState(''); \n  const [getZip, setZip] = useState('');\n  const [getPref, setPref] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const page = {\n      fullName,\n      getAdd,\n      getCity,\n      selectedState,\n      getZip,\n      skillArray,\n      dateArray\n    };\n    console.log(page);\n  };\n\n  /*(const handleSubmit = async () => {\r\n    //e.preventDefault();\r\n      const collectionRef = collection(db, \"UserProfiles\");\r\n    const page = { fullName: fullName, getAdd: getAdd, getCity: getCity, getState: selectedState, getZip: getZip, \r\n    skillArray: skillArray, dateArray: dateArray};\r\n    await addDoc(collectionRef, page);\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pageTitle\",\n        children: \"Profile Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center-text\",\n        children: \"An asterisk '*' means the field is required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PManageContainer1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerDiv1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Fill out your Name and Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"fullName\",\n            maxLength: \"50\",\n            placeholder: \"Full Name* (50 character limit)\",\n            required: true,\n            value: fullName,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"add1\",\n            maxLength: \"100\",\n            placeholder: \"Address 1* (100 character limit)\",\n            required: true,\n            value: getAdd,\n            onChange: e => setAddr(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"add2\",\n            maxLength: \"100\",\n            placeholder: \"Address 2 (optional)\",\n            value: getAdd2,\n            onChange: e => setAddr2(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            maxLength: \"100\",\n            placeholder: \"City* (100 character limit)\",\n            required: true,\n            value: getCity,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"state\",\n            style: {\n              maxWidth: \"470px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              className: \"state\",\n              options: states,\n              value: selectedState,\n              onChange: handleChangeState,\n              isSearchable: true,\n              maxMenuHeight: 130,\n              placeholder: \"State*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"zip\",\n            minLength: \"5\",\n            maxLength: \"9\",\n            placeholder: \"Zip code* (5-9 character limit)\",\n            required: true,\n            value: getZip,\n            onChange: e => setZip(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerDiv2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Fill out Credentials for your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skills\",\n            style: {\n              maxWidth: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose your skill(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: skills,\n              value: selectedSkill,\n              onChange: handleChangeSkill,\n              isSearchable: true,\n              maxMenuHeight: 150,\n              placeholder: \"Ex: creative, interpersonal communication, teamwork, etc\",\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Preferences (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"preferences\",\n            style: {\n              width: \"300px\"\n            },\n            placeholder: \"Enter preferences\",\n            value: getPref,\n            onChange: e => setPref(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose your availability date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            style: {\n              maxWidth: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              className: \"day\",\n              options: days,\n              value: selectedDay,\n              onChange: handleChangeDay,\n              isSearchable: true,\n              maxMenuHeight: 130,\n              placeholder: \"DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"month\",\n              options: months,\n              value: selectedMonth,\n              onChange: handleChangeMonth,\n              isSearchable: true,\n              maxMenuHeight: 130,\n              placeholder: \"MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"year\",\n              options: years,\n              value: selectedYear,\n              onChange: handleChangeYear,\n              isSearchable: true,\n              maxMenuHeight: 130,\n              placeholder: \"YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDates\",\n            onClick: handleDateSelection,\n            children: \"Select Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button submit\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileManage, \"6yQTlE3uNJQ0n6dwyNZ6Le+Y47A=\");\n_c = ProfileManage;\nexport default ProfileManage;\n\n/*\r\n\r\n            <input type=\"text\"\r\n              id=\"state\"\r\n              maxLength=\"2\"\r\n              placeholder='State*'\r\n              required\r\n              value={getState}\r\n              onChange={(e) => setState(e.target.value)} /><br />\r\n              */\nvar _c;\n$RefreshReg$(_c, \"ProfileManage\");","map":{"version":3,"names":["React","collection","addDoc","Navigation","Select","useState","db","jsxDEV","_jsxDEV","skills","value","label","states","days","Array","map","_","i","String","padStart","months","years","ProfileManage","_s","selectedState","setSelectedState","handleChangeState","selectedSkill","setSelectedSkill","skillArray","setSkillArray","handleChangeSkill","isArray","skillString","skill","join","selectedDay","setSelectedDay","handleChangeDay","selectedMonth","setSelectedMonth","handleChangeMonth","selectedYear","setSelectedYear","handleChangeYear","selectedDates","setSelectedDates","dateArray","setDateArray","handleDateSelection","newDate","includes","updatedDates","alert","fullName","setName","getAdd","setAddr","getAdd2","setAddr2","getCity","setCity","getZip","setZip","getPref","setPref","handleSubmit","e","preventDefault","page","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","maxLength","placeholder","required","onChange","target","style","maxWidth","options","isSearchable","maxMenuHeight","minLength","isMulti","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brady/Documents/GitHub/Volunteer-App/src/Pages/ProfileManage.js"],"sourcesContent":["import React from \"react\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport Navigation from '../Components/Navigation';\r\nimport Select from \"react-select\";\r\nimport { useState } from \"react\";\r\nimport db from \"../firebase\";\r\n\r\nconst skills = [\r\n  { value: \"Adaptability\", label: \"Adaptability\" },\r\n  { value: \"Communication\", label: \"Communication\" },\r\n  { value: \"Creative\", label: \"Creative\" },\r\n  { value: \"Interpersonal Communication\", label: \"Interpersonal Communication\" },\r\n  { value: \"Leadership\", label: \"Leadership\" },\r\n  { value: \"Problem Solving\", label: \"Problem Solving\" },\r\n  { value: \"Strong Work Ethic\", label: \"Strong Work Ethic\" },\r\n  { value: \"Teamwork\", label: \"Teamwork\" },\r\n  { value: \"Time Management\", label: \"Time Management\" }\r\n];\r\n\r\nconst states = [\r\n  { value: \"AL\", label: \"Alabama, AL\" },\r\n  { value: \"AK\", label: \"Alaska, AK\" },\r\n  { value: \"AZ\", label: \"Arizona, AK\" },\r\n  { value: \"AR\", label: \"Arkansas, AR\" },\r\n  { value: \"CA\", label: \"California, CA\" },\r\n  { value: \"CO\", label: \"Colorado, CO\" },\r\n  { value: \"CT\", label: \"Connecticut, CT\" },\r\n  { value: \"DE\", label: \"Delaware, DE\" },\r\n  { value: \"FL\", label: \"Florida, FL\" },\r\n  { value: \"GA\", label: \"Georgia, GA\" },\r\n  { value: \"HI\", label: \"Hawaii, HI\" },\r\n  { value: \"ID\", label: \"Idaho, ID\" },\r\n  { value: \"IL\", label: \"Illinois, IL\" },\r\n  { value: \"IN\", label: \"Indiana, IN\" },\r\n  { value: \"IA\", label: \"Iowa, IA\" },\r\n  { value: \"KS\", label: \"Kansas, KS\" },\r\n  { value: \"KY\", label: \"Kentucky, KY\" },\r\n  { value: \"LA\", label: \"Louisiana, LA\" },\r\n  { value: \"ME\", label: \"Maine, ME\" },\r\n  { value: \"MD\", label: \"Maryland, MD\" },\r\n  { value: \"MA\", label: \"Massachusetts, MA\" },\r\n  { value: \"MI\", label: \"Michigan, MI\" },\r\n  { value: \"MN\", label: \"Minnesota, MN\" },\r\n  { value: \"MS\", label: \"Mississippi, MS\" },\r\n  { value: \"MO\", label: \"Missouri, MO\" },\r\n  { value: \"MT\", label: \"Montana, MT\" },\r\n  { value: \"NE\", label: \"Nebraska, NE\" },\r\n  { value: \"NV\", label: \"Nevada, NV\" },\r\n  { value: \"NH\", label: \"New Hampshire, NH\" },\r\n  { value: \"NJ\", label: \"New Jersey, NJ\" },\r\n  { value: \"NM\", label: \"New Mexico, NM\" },\r\n  { value: \"NY\", label: \"New York, NY\" },\r\n  { value: \"NC\", label: \"North Carolina, NC\" },\r\n  { value: \"ND\", label: \"North Dakota, ND\" },\r\n  { value: \"OH\", label: \"Ohio, OH\" },\r\n  { value: \"OK\", label: \"Oklahoma, OK\" },\r\n  { value: \"OR\", label: \"Oregon, OR\" },\r\n  { value: \"PA\", label: \"Pennsylvania, PA\" },\r\n  { value: \"RI\", label: \"Rhode Island, RI\" },\r\n  { value: \"SC\", label: \"South Carolina, SC\" },\r\n  { value: \"SD\", label: \"South Dakota, SD\" },\r\n  { value: \"TN\", label: \"Tennessee, TN\" },\r\n  { value: \"TX\", label: \"Texas, TX\" },\r\n  { value: \"UT\", label: \"Utah, UT\" },\r\n  { value: \"VT\", label: \"Vermont, VT\" },\r\n  { value: \"VA\", label: \"Virginia, VA\" },\r\n  { value: \"WA\", label: \"Washington, WA\" },\r\n  { value: \"WV\", label: \"West Virginia, WV\" },\r\n  { value: \"WI\", label: \"Wisconsin, WI\" },\r\n  { value: \"WY\", label: \"Wyoming, WY\" }\r\n];\r\n\r\nconst days = [...Array(31)].map((_, i) => ({ value: String(i + 1), label: String(i + 1).padStart(2, '0') }));\r\nconst months = [...Array(12)].map((_, i) => ({ value: String(i + 1), label: String(i + 1).padStart(2, '0') }));\r\nconst years = [\r\n  { value: \"2024\", label: \"2024\" },\r\n  { value: \"2025\", label: \"2025\" },\r\n  { value: \"2026\", label: \"2026\" }\r\n];\r\n\r\nconst ProfileManage = () => {\r\n\r\n  /*const { currentUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  const emailRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [currentUser, navigate]);*/\r\n\r\n  const [selectedState, setSelectedState]  = useState(null);\r\n  const handleChangeState = (selectedState) => {\r\n    setSelectedState(selectedState);\r\n  };\r\n  \r\n  const [selectedSkill, setSelectedSkill] = useState([]);\r\n  const [skillArray, setSkillArray] = useState([]);\r\n\r\n  const handleChangeSkill = (selectedSkill) => {\r\n    setSelectedSkill(Array.isArray(selectedSkill) ? selectedSkill : []);\r\n    const skillString = (selectedSkill || []).map(skill => skill.value).join(\", \");\r\n    setSkillArray(skillString);\r\n  };\r\n\r\n  const [selectedDay, setSelectedDay] = useState(null);\r\n  const handleChangeDay = (selectedDay) => {\r\n    setSelectedDay(selectedDay);\r\n  };\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n  const handleChangeMonth = (selectedMonth) => {\r\n    setSelectedMonth(selectedMonth);\r\n  };\r\n\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n  const handleChangeYear = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  const [selectedDates, setSelectedDates] = useState([]);\r\n  const [dateArray, setDateArray] = useState([]);\r\n\r\n  const handleDateSelection = () => {\r\n    if (selectedDay && selectedMonth && selectedYear) {\r\n      const newDate = `${selectedYear.label}-${selectedMonth.label}-${selectedDay.label}`;\r\n      if (!selectedDates.includes(newDate)) {\r\n        const updatedDates = [...selectedDates, newDate];\r\n        setSelectedDates(updatedDates);\r\n        setDateArray(updatedDates.join(\", \"));\r\n      }\r\n    } else {\r\n      alert(\"Please select day, month, and year.\");\r\n    }\r\n  };\r\n\r\n  const [fullName, setName] = useState('');  \r\n  const [getAdd, setAddr] = useState('');    \r\n  const [getAdd2, setAddr2] = useState('');  \r\n  const [getCity, setCity] = useState('');   \r\n  //const [getState, setState] = useState(''); \r\n  const [getZip, setZip] = useState('');     \r\n  const [getPref, setPref] = useState('');   \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const page = { fullName, getAdd, getCity, selectedState, getZip, skillArray, dateArray };\r\n    console.log(page);\r\n  };\r\n\r\n  /*(const handleSubmit = async () => {\r\n    //e.preventDefault();\r\n\r\n    const collectionRef = collection(db, \"UserProfiles\");\r\n    const page = { fullName: fullName, getAdd: getAdd, getCity: getCity, getState: selectedState, getZip: getZip, \r\n    skillArray: skillArray, dateArray: dateArray};\r\n    await addDoc(collectionRef, page);\r\n  };*/\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navigation />\r\n      </div>\r\n\r\n      <div className=\"center-text\">\r\n        <h1 className=\"pageTitle\">Profile Management</h1>\r\n        <p className=\"center-text\">An asterisk '*' means the field is required.</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"PManageContainer1\">\r\n          <div className=\"registerDiv1\">\r\n            <h3>Fill out your Name and Location</h3>\r\n            <br />\r\n            <input type=\"text\"\r\n              id=\"fullName\" maxLength=\"50\"\r\n              placeholder='Full Name* (50 character limit)'\r\n              required\r\n              value={fullName}\r\n              onChange={(e) => setName(e.target.value)} /><br />\r\n\r\n            <input type=\"text\"\r\n              id=\"add1\"\r\n              maxLength=\"100\"\r\n              placeholder='Address 1* (100 character limit)'\r\n              required\r\n              value={getAdd}\r\n              onChange={(e) => setAddr(e.target.value)} /><br />\r\n\r\n            <input type=\"text\"\r\n              id=\"add2\"\r\n              maxLength=\"100\"\r\n              placeholder='Address 2 (optional)'\r\n              value={getAdd2}\r\n              onChange={(e) => setAddr2(e.target.value)} /><br />\r\n\r\n            <input type=\"text\"\r\n              id=\"city\"\r\n              maxLength=\"100\"\r\n              placeholder='City* (100 character limit)'\r\n              required\r\n              value={getCity}\r\n              onChange={(e) => setCity(e.target.value)} /><br />\r\n              \r\n            <div className=\"state\" style={{ maxWidth: \"470px\" }}>\r\n              <Select className=\"state\" options={states}\r\n                value={selectedState}\r\n                onChange={handleChangeState}\r\n                isSearchable={true}\r\n                maxMenuHeight={130}\r\n                placeholder='State*'\r\n              />\r\n              </div>\r\n\r\n            <input type=\"text\"\r\n              id=\"zip\"\r\n              minLength=\"5\"\r\n              maxLength=\"9\"\r\n              placeholder='Zip code* (5-9 character limit)'\r\n              required\r\n              value={getZip}\r\n              onChange={(e) => setZip(e.target.value)} /><br />\r\n          </div>\r\n\r\n          <div className=\"registerDiv2\">\r\n            <h3>Fill out Credentials for your Profile</h3>\r\n\r\n            <div className=\"skills\" style={{ maxWidth: \"300px\" }}>\r\n              <p>Choose your skill(s)</p>\r\n              <Select options={skills}\r\n                value={selectedSkill}\r\n                onChange={handleChangeSkill}\r\n                isSearchable={true}\r\n                maxMenuHeight={150}\r\n                placeholder='Ex: creative, interpersonal communication, teamwork, etc'\r\n                isMulti={true}\r\n              />\r\n            </div>\r\n\r\n            <p>Preferences (optional)</p>\r\n            <input type=\"text\"\r\n              id=\"preferences\"\r\n              style={{ width: \"300px\" }}\r\n              placeholder='Enter preferences'\r\n              value={getPref}\r\n              onChange={(e) => setPref(e.target.value)}></input>\r\n\r\n            <p>Choose your availability date:</p>\r\n            <div className=\"date\" style={{ maxWidth: \"300px\" }}>\r\n              <Select className=\"day\" options={days}\r\n                value={selectedDay}\r\n                onChange={handleChangeDay}\r\n                isSearchable={true}\r\n                maxMenuHeight={130}\r\n                placeholder='DD'\r\n              />\r\n\r\n              <Select className=\"month\" options={months}\r\n                value={selectedMonth}\r\n                onChange={handleChangeMonth}\r\n                isSearchable={true}\r\n                maxMenuHeight={130}\r\n                placeholder='MM'\r\n              />\r\n\r\n              <Select className=\"year\" options={years}\r\n                value={selectedYear}\r\n                onChange={handleChangeYear}\r\n                isSearchable={true}\r\n                maxMenuHeight={130}\r\n                placeholder='YYYY'\r\n              />\r\n            </div>\r\n            <button className=\"buttonDates\" onClick={handleDateSelection}>Select Date</button>\r\n          </div> \r\n          <button className=\"button submit\">Update Profile</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileManage;\r\n\r\n/*\r\n\r\n            <input type=\"text\"\r\n              id=\"state\"\r\n              maxLength=\"2\"\r\n              placeholder='State*'\r\n              required\r\n              value={getState}\r\n              onChange={(e) => setState(e.target.value)} /><br />\r\n              */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}